do.call(rbind, sapply(capture_GFP, "[", 1)))
#Getting all the treatment model coefficients for RFP
capture_RFP <- sapply(sub_val1_all, function (x)
weighted_lm("fitness", "prop_par", df4, "treatment", "type", x, "RFP"),
simplify = FALSE, USE.NAMES = TRUE)
#Unpackaging the coefficients from the nested list
RFP_coef <- cbind.data.frame(treat = sub_val1_all, type = "RFP",
do.call(rbind, sapply(capture_RFP, "[", 1)))
lm_3b <- rbind.data.frame(GFP_coef, RFP_coef)
names(lm_3b)[names(lm_3b) ==  "(Intercept)"] <- "intercept"
lm_3b$grp <- rep(LETTERS[2:10], length.out =nrow(lm_3b))
res_invader <- 0
par_invader <- 0
for(i in 1:length(unique(lm_3b$grp))){
res_invader[i] <- signif((lm_3b$intercept[i+9] + lm_3b$prop_par[i+9]*1) - (lm_3b$intercept[i] + lm_3b$prop_par[i]*1), 3)
par_invader[i] <- signif((lm_3b$intercept[i] + (lm_3b$prop_par[i]*0)) - (lm_3b$intercept[i+9] + (lm_3b$prop_par[i+9]*0)), 3)
}
game_space <- data.frame(par_invader = par_invader,
res_invader = res_invader)
game_space$grp <- rep(LETTERS[2:10], length.out =nrow(game_space))
game_space$dose <- c("DMSO", "2.5nM", "7nM", "22nM", "67nM", "0.2uM", "0.6uM", "1.8uM", "5.4uM")
## Game space
subset(game_space, dose != "2.5nM") %>% ggplot(aes(res_invader, par_invader, color = as.factor(grp))) +
geom_point(size = 3 ) +
geom_text(aes(label = factor(dose)),
vjust = -0.95, hjust = 0.5, size = 4, show.legend = F) +
scale_color_discrete(name = "Dose", labels = c("DMSO", "7nM", "22nM",
"67nM", "0.2uM", "0.6uM",
"1.8uM", "5.4uM")) +
xlim(-0.00700, 0.0150) +
xlab("Fitness of resistant invader") + ylab("Fitness of parenatl invader") +
geom_hline(yintercept=0, linetype="dashed", color = "red") +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
labs(color = "plate") +
ggtitle("PC9 parental vs PC9+B-Raf-V600E ") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, face = "bold", color = "#993333"),
axis.title.y = element_text(color="#993333", size=14, face="bold"),
axis.title.x = element_text(color="#993333", size=14, face="bold"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
subset(df_new, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate == 3) %>%
ggplot(aes(time, log2(count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate ==3),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate == 3),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("Plot of RFP from plate 1") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
path <- "~/Documents/Dag_Cle_2022/September/2_Game_analysis_Osi_092322"
file.name <- c("plate_1.csv", "plate_2.csv", "plate_3.csv", "plate_4.csv")
combined_data <- c()
plate.count <- function(file.name){
for (i in 1:length(file.name)){
file.name[i] <- file.name[i]
full.path <- file.path(path, file.name[i])
data <- read.csv(full.path)
# file.name <- file.name
# full.path <- file.path(path, file.name)
# data <- read.csv(full.path)
# Add time 4:104
data["time"] <- 0
data$time <- rep_len(seq(4,144,4), length.out = nrow(data))
#Add well from Slice column
data$well <- 0
data$well <- gsub("_-.*", "" , data$FileName_gfp)
## Remove extra columns
data <- data[, !names(data) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
data_new <- gather(data, key = "type", value = "count", -c("time", "well"))
# Assign GFP and RFP to type
data_new$type <- ifelse(data_new$type %in% "Count_gfp_objects", "GFP" , "RFP")
# Create column and row
data_new$column <- as.numeric(gsub("[A-Z]", "" , data_new$well))
data_new$row <- gsub("[0-9]", "" , data_new$well)
# Add plate number
data_new["plate"] <- i
# Add proportion parental ratio
#data_new["prop_par"] <- ifelse(data_new$row %in% c("B", "C", "D"), 0, 0.1)
# Ordering the df_GFP and df_texas dataset
data_new <- data_new[order(data_new$column, data_new$row),]
temp_data <- data_new
combined_data <- rbind(combined_data, temp_data)
rm(temp_data)
}
return(combined_data)
}
# Run the function plate.count
# The count was done separately per plate
# And the function combines all the 4 plates and gives df_new dataframe
df_new <- plate.count(file.name)
index <- c(2:11)
values <- c(3.048316e-11, 9.144947e-11, 2.743484e-10, 8.230453e-10, 2.469136e-09,
7.407407e-09, 2.222222e-08, 6.666667e-08, 2e-7, 6e-7)
df_new$treatment <- values[match(df_new$column, index)]
df_new$prop_par <- ifelse(df_new$row %in% c("B", "C", "D") & df_new$plate %in% 1, 0,
ifelse(df_new$row %in% c("E", "F", "G") & df_new$plate %in% 1, 0.1,
ifelse(df_new$row %in% c("B", "C", "D") & df_new$plate %in% 2, 0.3,
ifelse(df_new$row %in% c("E", "F", "G") & df_new$plate %in% 2, 0.5,
ifelse(df_new$row %in% c("B", "C", "D") & df_new$plate %in% 3, 0.7,
ifelse(df_new$row %in% c("E", "F", "G") & df_new$plate %in% 3, 0.9,
ifelse(df_new$row %in% c("B", "C", "D") & df_new$plate %in% 4, 0.95, 1)))))))
df_new$count[df_new$plate == 1 & df_new$row %in% c("B", "C", "D") & df_new$type %in% "GFP"] <- 0
df_new$count[df_new$plate == 4 & df_new$row %in% c("E", "F", "G")& df_new$type %in% "RFP" ] <- 0
### Plot of all RFP scattered plot
formula = y ~ x
subset(df_new, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate == 3) %>%
ggplot(aes(time, log2(count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate ==3),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate == 3),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("Plot of RFP from plate 1") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(df_new, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate == 3) %>%
ggplot(aes(time, log2(count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate ==3),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" & plate == 3),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(df_new, column %in% 2:11 & time %in% 32:80 & type %in% "GFP" & plate ==3) %>%
ggplot(aes(time, log2(count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP" & plate ==3),
method = "lm" , se=FALSE, formula = formula, color = "green") +
stat_regline_equation(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP" & plate ==3),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("PC9-GFP") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
ln(1)
exp(1)
exp(-10)*10^6
exp(-1)
exp(-10)
path <- "~/tadeled/Desktop"
file.name1 <- "plate_3.csv"
file.name2 <- "plate_3c.csv"
full.path1 <- file.path(path, file.name1)
full.path2 <- file.path(path, file.name2)
df1 <- read.csv(full.path)
df1 <- read.csv(full.path1)
path <- "~/Users/tadeled/Desktop"
file.name1 <- "plate_3.csv"
file.name2 <- "plate_3c.csv"
full.path1 <- file.path(path, file.name1)
full.path2 <- file.path(path, file.name2)
df1 <- read.csv(full.path1)
getwd()
path <- "/Users/tadeled/Desktop"
file.name1 <- "plate_3.csv"
file.name2 <- "plate_3c.csv"
full.path1 <- file.path(path, file.name1)
full.path2 <- file.path(path, file.name2)
df1 <- read.csv(full.path1)
df1 <- read.csv(full.path2)
path <- "/Users/tadeled/Desktop"
file.name1 <- "plate_3.csv"
file.name2 <- "plate_3c.csv"
full.path1 <- file.path(path, file.name1)
full.path2 <- file.path(path, file.name2)
df1 <- read.csv(full.path1)
df2 <- read.csv(full.path2)
View(df1)
144/4
df1["time"] <- 0
df1$time <- rep_len(seq(4,144,4), length.out = nrow(df1))
#Add well from Slice column
df1$well <- 0
df1$well <- gsub("_-.*", "" , df1$FileName_gfp)
## Remove extra columns
df1 <- df1[, !names(df1) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
df1_new <- gather(df1, key = "type", value = "count", -c("time", "well"))
# Assign GFP and RFP to type
df1_new$type <- ifelse(df1_new$type %in% "Count_gfp_objects", "GFP" , "RFP")
# Create column and row
df1_new$column <- as.numeric(gsub("[A-Z]", "" , df1_new$well))
df1_new$row <- gsub("[0-9]", "" , df1_new$well)
View(df1_new)
df1_new["plate"] <- "A"
###########df2
df2["time"] <- 0
df2$time <- rep_len(seq(4,144,4), length.out = nrow(df2))
#Add well from Slice column
df2$well <- 0
df2$well <- gsub("_-.*", "" , df2$FileName_gfp)
## Remove extra columns
df2 <- df2[, !names(df1) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
df2_new <- gather(df2, key = "type", value = "count", -c("time", "well"))
# Assign GFP and RFP to type
df2_new$type <- ifelse(df2_new$type %in% "Count_gfp_objects", "GFP" , "RFP")
# Create column and row
df2_new$column <- as.numeric(gsub("[A-Z]", "" , df2_new$well))
df2_new$row <- gsub("[0-9]", "" , df2_new$well)
df2_new["plate"] <- "B"
rm(df2_new)
###########df2
df2["time"] <- 0
df2$time <- rep_len(seq(4,144,4), length.out = nrow(df2))
#Add well from Slice column
df2$well <- 0
df2$well <- gsub("_-.*", "" , df2$FileName_gfp)
## Remove extra columns
df2 <- df2[, !names(df1) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
View(df2)
# Gather GFP and RFP count from column 1 and 2!
df2_new <- gather(df2, key = "type", value = "count", -c("time", "well"))
View(df2_new)
path <- "/Users/tadeled/Desktop"
file.name1 <- "plate_3.csv"
file.name2 <- "plate_3c.csv"
full.path1 <- file.path(path, file.name1)
full.path2 <- file.path(path, file.name2)
df1 <- read.csv(full.path1)
df2 <- read.csv(full.path2)
df1["time"] <- 0
df1$time <- rep_len(seq(4,144,4), length.out = nrow(df1))
#Add well from Slice column
df1$well <- 0
df1$well <- gsub("_-.*", "" , df1$FileName_gfp)
View(df1)
## Remove extra columns
df1 <- df1[, !names(df1) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
df1_new <- gather(df1, key = "type", value = "count", -c("time", "well"))
View(df1_new)
# Assign GFP and RFP to type
df1_new$type <- ifelse(df1_new$type %in% "Count_gfp_objects", "GFP" , "RFP")
View(df1_new)
# Create column and row
df1_new$column <- as.numeric(gsub("[A-Z]", "" , df1_new$well))
df1_new$row <- gsub("[0-9]", "" , df1_new$well)
df1_new["plate"] <- "A"
View(df2)
###########df2
df2["time"] <- 0
df2$time <- rep_len(seq(4,144,4), length.out = nrow(df2))
#Add well from Slice column
df2$well <- 0
df2$well <- gsub("_-.*", "" , df2$FileName_gfp)
## Remove extra columns
df2 <- df2[, !names(df1) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
## Remove extra columns
df2 <- df2[, !names(df2) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
df2_new <- gather(df2, key = "type", value = "count", -c("time", "well"))
## Remove extra columns
df1 <- df1[, !names(df1) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
df1_new <- gather(df1, key = "type", value = "count", -c("time", "well"))
# Assign GFP and RFP to type
df1_new$type <- ifelse(df1_new$type %in% "Count_gfp_objects", "GFP" , "RFP")
# Create column and row
df1_new$column <- as.numeric(gsub("[A-Z]", "" , df1_new$well))
df1_new$row <- gsub("[0-9]", "" , df1_new$well)
df1_new["plate"] <- "A"
###########df2
df2["time"] <- 0
path <- "/Users/tadeled/Desktop"
file.name1 <- "plate_3.csv"
file.name2 <- "plate_3c.csv"
full.path1 <- file.path(path, file.name1)
full.path2 <- file.path(path, file.name2)
df1 <- read.csv(full.path1)
df2 <- read.csv(full.path2)
df1["time"] <- 0
df1$time <- rep_len(seq(4,144,4), length.out = nrow(df1))
#Add well from Slice column
df1$well <- 0
df1$well <- gsub("_-.*", "" , df1$FileName_gfp)
## Remove extra columns
df1 <- df1[, !names(df1) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
df1_new <- gather(df1, key = "type", value = "count", -c("time", "well"))
# Assign GFP and RFP to type
df1_new$type <- ifelse(df1_new$type %in% "Count_gfp_objects", "GFP" , "RFP")
# Create column and row
df1_new$column <- as.numeric(gsub("[A-Z]", "" , df1_new$well))
df1_new$row <- gsub("[0-9]", "" , df1_new$well)
df1_new["plate"] <- "A"
###########df2
df2["time"] <- 0
df2$time <- rep_len(seq(4,144,4), length.out = nrow(df2))
#Add well from Slice column
df2$well <- 0
df2$well <- gsub("_-.*", "" , df2$FileName_gfp)
## Remove extra columns
df2 <- df2[, !names(df2) %in% c("FileName_gfp", "FileName_rfp",
"ImageNumber", "tag_gfp")]
# Gather GFP and RFP count from column 1 and 2!
df2_new <- gather(df2, key = "type", value = "count", -c("time", "well"))
# Assign GFP and RFP to type
df2_new$type <- ifelse(df2_new$type %in% "Count_gfp_objects", "GFP" , "RFP")
# Create column and row
df2_new$column <- as.numeric(gsub("[A-Z]", "" , df2_new$well))
df2_new$row <- gsub("[0-9]", "" , df2_new$well)
df2_new["plate"] <- "B"
View(df1_new)
View(df2_new)
names(df2_new)[names(df2_new) ==  "count"] <- "new_count"
View(df2_new)
View(df1_new)
comb_df <- merge(df1_new, df2_new, by = c("time","well"))
View(comb_df)
comb_df <- merge(df1_new, df2_new, by = c("well"))
View(df1_new)
comb_df <- merge(df1_new, df2_new, by = c("time","well", "plate"))
comb_df <- merge(df1_new, df2_new, by = c("time","well", "type"))
View(comb_df)
View(df1)
View(df1_new)
View(df2_new)
View(df2_new)
View(df1_new)
View(df1)
View(comb_df)
comb_df <- comb_df[, -c(9:11)]
View(comb_df)
names(comb_df)
names(df2_new)[names(df2_new) ==  "column.x"] <- "column"
names(df2_new)[names(df2_new) ==  "row.x"] <- "row"
names(df2_new)[names(df2_new) ==  "plate.x"] <- "plate"
View(comb_df)
names(comb_df)[names(comb_df) ==  "column.x"] <- "column"
names(comb_df)[names(comb_df) ==  "row.x"] <- "row"
names(comb_df)[names(comb_df) ==  "plate.x"] <- "plate"
comb_df <- data_new[order(comb_df$column, data_new$row),]
comb_df <- comb_df[order(comb_df$column, data_new$row),]
comb_df <- comb_df[order(comb_df$column, comb_df$row),]
View(comb_df)
comb_df <- comb_df[order(comb_df$time , comb_df$column, comb_df$row),]
View(comb_df)
View(comb_df)
formula = y ~ x
# Import data
library(ggplot2)
library(dplyr)
formula = y ~ x
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ) %>%
ggplot(aes(time, log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(df_new,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ) %>%
ggplot(aes(time, log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ) %>%
ggplot(aes(log2(count+0.001), log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ) %>%
ggplot(aes(log2(count+0.001), log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
View(comb_df)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ) %>%
ggplot(aes(log2(count+0.001), log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ) %>%
ggplot(aes(log2(count+0.001), log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP"),
method = "lm" , se=FALSE, formula = formula, color = "green") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ) %>%
ggplot(aes(time, log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ) %>%
ggplot(aes(log2(count+0.001), log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP"),
method = "lm" , se=FALSE, formula = formula, color = "green") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ) %>%
ggplot(aes(log2(count+0.001), log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("Count") +
ggtitle("B-RAF-V600E count") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ) %>%
ggplot(aes(log2(count+0.001), log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP"),
method = "lm" , se=FALSE, formula = formula, color = "green") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "GFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("New_count") + ylab("Old_count") +
ggtitle("Plate_3") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
subset(comb_df, column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ) %>%
ggplot(aes(time, log2(new_count+0.001), color = as.factor(row))) +
geom_point(color="black", size = 0.5) +
stat_smooth(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP"),
method = "lm" , se=FALSE, formula = formula, color = "red") +
stat_regline_equation(data = subset(comb_df,  column %in% 2:11 & time %in% 32:80 & type %in% "RFP" ),
aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
size = 3, formula = formula, show.legend = F  ) +
#geom_text(x=7500, y=20000, label="R2 = 62.54") +
xlab("time") + ylab("log10 RFP Cell Count") +
ggtitle("Plate_3") +
theme(plot.title = element_text(hjust = 0.5)) +
facet_grid(row ~ column)
